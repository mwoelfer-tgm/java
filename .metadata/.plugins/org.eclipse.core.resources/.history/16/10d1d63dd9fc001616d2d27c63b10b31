package bruch

class Bruch {
	BigInteger z
	BigInteger n
	
	Bruch(Bruch b){
		
		this.z = b.z
		this.n = b.n
	}
	
	Bruch(int z){
		this.z = z
		this.n = 1
	}
	
	Bruch(int z, int n){
		this.z = z
		this.n = n
	}
	
	String toString(){
		"Bruch($z, $n)"
	}
	
	Double doubleValue(){
		this.z / this.n
	}
	Bruch div(Bruch other){
		z = this.z * other.n
		n = this.n * other.z
		
		new Bruch(z / gcd(z,n) as BigInteger, n / gcd(z,n) as BigInteger)
	}
	
	Integer gcd(Integer i, Integer j) {
		if (Math.min(i,j)==0) return Math.max(i,j)
		else return gcd(Math.min(i,j),Math.abs(i-j))
	}
}


