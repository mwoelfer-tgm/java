import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;

public class HMClient {
	public static void main(String[] args)  {
		//Initialize Variables for creating socket
		String hostName = "";
		int portNumber = 0;
		try{
			//Get hostname and portnumber from parameters
			hostName = args[0];
			portNumber = Integer.parseInt(args[1]);
		} catch (Exception e){
			System.err.println("Bitte gültigen Hostnamen und Portnummer angeben!");
		}
		//Open necessary recourses => can be compared with the "WITH-STATEMENT"
		
		//Socket socket: The clientsocket which connects to the server with a hostname and a portnumber
		//PrintWriter out: The printwriter to send data to the server
		//BufferedReader in: The BufferedReader which receives data from the server
		//BufferedReader stdIn: The BufferedRedaer which receives data from the console => the user
		try(
		Socket socket = new Socket(hostName,portNumber);
		PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
		BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		BufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in))){
			String userInput;
			System.out.println("Connected with " + hostName + ":" + portNumber);
			while ((userInput = stdIn.readLine()) != null){
				out.println(userInput);
				String answer = in.readLine();
				System.out.println("Answer: " + answer);
				if(answer.contains("You won!")){
					out.close();
					in.close();
					stdIn.close();
					break;
				}
			}
		} catch(UnknownHostException e){
			System.err.println("Don't know about host " + hostName + ":" + portNumber);
			System.exit(1);
		} catch(IOException e){
			System.err.println("Couldn't get IO for connection to " + hostName + ":" + portNumber);
			System.exit(1);
		}
	}
}
